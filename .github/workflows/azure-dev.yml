on:
  workflow_dispatch:
    inputs:
      force-provision:
        type: boolean
        description: Force provision
        default: false
  push:
    branches:
      - main

# GitHub Actions workflow to deploy to Azure using azd
# To configure required secrets for connecting to Azure, simply run `azd pipeline config`

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  prod-deploy:
    runs-on: ubuntu-latest
    environment: Production
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log into Azure (az)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Retrieve secrets from Key Vault
        id: keyvault
        uses: azure/CLI@v1
        with:
          inlineScript: |
            secret_names=(
              "azure-env-name"
              "azure-location"
              "azure-location-web"
              "azure-resource-group"
              "azure-static-web-app-custom-domain"
            )

            for name in "${secret_names[@]}"; do
              SECRET_VALUE=$(az keyvault secret show --name "$name" --vault-name ${{ secrets.AZURE_VAULT_NAME }} --query value -o tsv)
              echo "::add-mask::$SECRET_VALUE"
              echo "$name=$SECRET_VALUE" >> $GITHUB_ENV
            done

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Log into Azure (azd)
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Provision Infrastructure
        run: |
          if [ "${{ github.event.inputs.force-provision }}" = "true" ]; then
            azd provision --no-prompt --no-state
          else
            azd provision --no-prompt
          fi
        env:
          AZURE_ENV_NAME: ${{ env.azure-env-name }}
          AZURE_LOCATION: ${{ env.azure-location }}
          AZURE_LOCATION_WEB: ${{ env.azure-location-web }}
          AZURE_RESOURCE_GROUP: ${{ env.azure-resource-group }}
          AZURE_STATIC_WEB_APP_CUSTOM_DOMAIN: ${{ env.azure-static-web-app-custom-domain }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Application
        run: azd deploy --no-prompt
        env:
          AZURE_ENV_NAME: ${{ env.azure-env-name }}
          AZURE_LOCATION: ${{ env.azure-location }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
